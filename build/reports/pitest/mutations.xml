<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>addNegatives</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>addNegatives</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>16</index><block>3</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>addNegatives</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;I)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>addNegatives</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;I)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>removed call to com/l3rnz/algebrain/domain/Term::addNegative</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>calculateNumberOfNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>2</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>calculateNumberOfNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>24</index><block>5</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>calculateNumberOfNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>calculateNumberOfNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>calculateNumberOfNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>34</index><block>7</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>replaced int return with 0 for com/l3rnz/algebrain/parser/ExpressionParser::calculateNumberOfNegatives</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>endPartAndAdd</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;Z)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>getPriorCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>getPriorCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>getPriorCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>replaced char return with 0 for com/l3rnz/algebrain/parser/ExpressionParser::getPriorCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>isAddOperation</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>13</index><block>3</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/parser/ExpressionParser::isAddOperation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>isAddOperation</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>isSubtractOperation</mutatedMethod><methodDescription>(CC)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>19</index><block>5</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/parser/ExpressionParser::isSubtractOperation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>isSubtractOperation</mutatedMethod><methodDescription>(CC)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>isSubtractOperation</mutatedMethod><methodDescription>(CC)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>isSubtractOperation</mutatedMethod><methodDescription>(CC)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#10]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>18</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/parser/ExpressionParser::parse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>60</index><block>17</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/parser/ExpressionParser::parse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>15</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>removed call to com/l3rnz/algebrain/domain/Sum::addTerm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>parseTerm</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>28</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/parser/ExpressionParser::parseTerm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>parseTerm</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>3</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#2]</killingTest><description>removed call to com/l3rnz/algebrain/parser/ExpressionParser::addNegatives</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processAddOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZC)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>26</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>replaced boolean return with false for com/l3rnz/algebrain/parser/ExpressionParser::processAddOperation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processAddOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZC)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>26</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#9]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/parser/ExpressionParser::processAddOperation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processAddOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZC)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processAddOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZC)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>2</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>removed call to com/l3rnz/algebrain/parser/ExpressionParser::endPartAndAdd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processOneCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;Ljava/lang/StringBuilder;ZI)Z</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>45</index><block>5</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>replaced boolean return with false for com/l3rnz/algebrain/parser/ExpressionParser::processOneCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processOneCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;Ljava/lang/StringBuilder;ZI)Z</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>45</index><block>5</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#9]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/parser/ExpressionParser::processOneCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processOneCharacter</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/util/List;Ljava/lang/StringBuilder;ZI)Z</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>removed call to com/l3rnz/algebrain/parser/ExpressionParser::processOtherCharacters</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processOtherCharacters</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;CC)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processOtherCharacters</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;CC)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processSubtractOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZCC)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>27</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>replaced boolean return with false for com/l3rnz/algebrain/parser/ExpressionParser::processSubtractOperation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processSubtractOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZCC)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>27</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#9]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/parser/ExpressionParser::processSubtractOperation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processSubtractOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZCC)Z</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processSubtractOperation</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/StringBuilder;ZCC)Z</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>2</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#9]</killingTest><description>removed call to com/l3rnz/algebrain/parser/ExpressionParser::endPartAndAdd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processTermWithoutNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processTermWithoutNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>7</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processTermWithoutNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>13</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>processTermWithoutNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>53</index><block>16</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#1]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/parser/ExpressionParser::processTermWithoutNegatives</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>splitSum</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>splitSum</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>52</index><block>8</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>replaced return value with Collections.emptyList for com/l3rnz/algebrain/parser/ExpressionParser::splitSum</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>splitSum</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>6</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>splitSum</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[test-template:testThatParserParsesIntoEquationThatRendersSame(java.lang.String)]/[test-template-invocation:#6]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExpressionParser.java</sourceFile><mutatedClass>com.l3rnz.algebrain.parser.ExpressionParser</mutatedClass><mutatedMethod>splitSum</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>7</block><killingTest>com.l3rnz.algebrain.parser.ExpressionParserTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.parser.ExpressionParserTest]/[method:testThatParserFailsWithBadData()]</killingTest><description>removed call to com/l3rnz/algebrain/parser/ExpressionParser::endPartAndAdd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>addTerm</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Expression;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindElementAtThrowsExceptionAsNeeded()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>addTerm</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Expression;)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindIndexOfWorksPastZero()]</killingTest><description>removed call to com/l3rnz/algebrain/domain/Sum::addTerm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>checkForIllegalMerge</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>8</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeOffRightSideThrowsException()]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>checkForIllegalMerge</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeNonExistentTermThrowsException()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>checkForIllegalMerge</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeOffLeftSideThrowsException()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>checkForIllegalMerge</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeOffLeftSideThrowsException()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>checkForIllegalMerge</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>8</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeOffRightSideThrowsException()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>checkForIllegalMerge</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>9</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeOffRightSideThrowsException()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>4</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatContainsDoesntFindDuplicate()]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/domain/Sum::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatContainsFindsElement()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatContainsFindsElement()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findElementAt</mutatedMethod><methodDescription>(I)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatWeCanIdentifyElementInSum()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findElementAt</mutatedMethod><methodDescription>(I)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>10</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindElementAtSizeFails()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findElementAt</mutatedMethod><methodDescription>(I)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>10</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatWeCanIdentifyElementInSum()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findElementAt</mutatedMethod><methodDescription>(I)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindElementAtThrowsExceptionAsNeeded()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findElementAt</mutatedMethod><methodDescription>(I)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>10</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatWeCanIdentifyElementInSum()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findElementAt</mutatedMethod><methodDescription>(I)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>48</index><block>12</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatWeCanIdentifyElementInSum()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/Sum::findElementAt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findIndexOf</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatContainsDoesntFindDuplicate()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findIndexOf</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindIndexOfWorksPastZero()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findIndexOf</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>5</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindIndexOfWorksPastZero()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findIndexOf</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)I</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>6</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindIndexOfWorksPastZero()]</killingTest><description>replaced int return with 0 for com/l3rnz/algebrain/domain/Sum::findIndexOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>findIndexOf</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>35</index><block>8</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatContainsDoesntFindDuplicate()]</killingTest><description>replaced int return with 0 for com/l3rnz/algebrain/domain/Sum::findIndexOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;Z)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>5</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;Z)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;Z)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>37</index><block>8</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/Sum::merge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;Z)Lcom/l3rnz/algebrain/domain/Expression;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeOffLeftSideThrowsException()]</killingTest><description>removed call to com/l3rnz/algebrain/domain/Sum::checkForIllegalMerge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;I)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMoveThrowsExceptionIfWrongExpression()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;I)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>10</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMoveWorks()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>move</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;I)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>14</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMoveWorks()]</killingTest><description>removed call to java/util/List::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>7</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>54</index><block>14</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>replaced return value with &#34;&#34; for com/l3rnz/algebrain/domain/Sum::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sum.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Sum</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>7</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>addNegative</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testNegativeVariableTermIsNegative()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>getNegativeCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testVariableTermWithThreeNegatives()]</killingTest><description>replaced int return with 0 for com/l3rnz/algebrain/domain/Term::getNegativeCount</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>getNegativeMultiplier</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatGetValueOnDecimalShowsRightValueWithSeveralNegatives()]</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>getNegativeMultiplier</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatGetValueShowsRightValue()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>getNegativeMultiplier</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>15</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatGetValueShowsRightValue()]</killingTest><description>replaced int return with 0 for com/l3rnz/algebrain/domain/Term::getNegativeMultiplier</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>isNegative</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>13</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/domain/Term::isNegative</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>isNegative</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>isNegative</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testNegativeVariableTermIsNegative()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatZeroIsNotNegative()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>39</index><block>7</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatZeroIsNotNegative()]</killingTest><description>replaced return value with &#34;&#34; for com/l3rnz/algebrain/domain/Term::toString</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>25</index><block>4</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Term.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.Term</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Double;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Double;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>5</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatGetValueOnDecimalShowsRightValueWithSeveralNegatives()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Double;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatDecimalTermDisplaysWell()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>5</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimal()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatIntTermDoesntMergeWithVariableTerm()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>8</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatIntTermDoesntMergeWithVariableTerm()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>21</index><block>7</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimal()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/DecimalTerm::addValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>38</index><block>12</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithTwoDecimals()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/DecimalTerm::addValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>getSumWith</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/DecimalTerm;)D</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>6</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithTwoDecimals()]</killingTest><description>replaced double return with 0.0d for com/l3rnz/algebrain/domain/DecimalTerm::getSumWith</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/Double;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatGetValueOnDecimalShowsRightValueWithSeveralNegatives()]</killingTest><description>replaced Double return value with 0 for com/l3rnz/algebrain/domain/DecimalTerm::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DecimalTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.DecimalTerm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/Double;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatGetValueOnDecimalShowsRightValueWithSeveralNegatives()]</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatZeroIsNotNegative()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>5</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatWeCanIdentifyEndElementInSum()]</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatZeroIsNotNegative()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>5</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorks()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>13</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>8</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>7</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorks()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/IntegerTerm::addValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>42</index><block>15</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/IntegerTerm::addValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/Integer;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>11</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatGetValueShowsRightValue()]</killingTest><description>replaced Integer return value with 0 for com/l3rnz/algebrain/domain/IntegerTerm::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IntegerTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.IntegerTerm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/Integer;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatMergeWorksWithDecimalBackwards()]</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatVariableTermMustBeAllLetters()]</killingTest><description>removed call to com/l3rnz/algebrain/domain/VariableTerm::handleBadData</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testNegativeVariableTermIsNegative()]</killingTest><description>removed call to com/l3rnz/algebrain/domain/VariableTerm::separateDataAndNegatives</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>4</index><block>0</block><killingTest/><description>replaced return value with &#34;&#34; for com/l3rnz/algebrain/domain/VariableTerm::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>handleBadData</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testThatVariableTermMustBeAllLetters()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>separateDataAndNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>19</index><block>4</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testNegativeVariableTermIsNegative()]</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>separateDataAndNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testNegativeVariableTermIsNegative()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>separateDataAndNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testNegativeVariableTermIsNegative()]</killingTest><description>removed call to com/l3rnz/algebrain/domain/VariableTerm::addNegative</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>VariableTerm.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.VariableTerm</mutatedClass><mutatedMethod>separateDataAndNegatives</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest>com.l3rnz.algebrain.domain.TermTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.TermTest]/[method:testNegativeVariableTermWorks()]</killingTest><description>removed call to com/l3rnz/algebrain/domain/VariableTerm::setData</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Z</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindIndexOfWorksPastZero()]</killingTest><description>replaced boolean return with false for com/l3rnz/algebrain/domain/SumPart::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Lcom/l3rnz/algebrain/domain/Term;)Z</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatFindIndexOfWorksPastZero()]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/domain/SumPart::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>displayPlus</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>19</index><block>5</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysDoubleNegative()]</killingTest><description>replaced boolean return with true for com/l3rnz/algebrain/domain/SumPart::displayPlus</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>displayPlus</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysDoubleNegative()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>displayPlus</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatSumDisplaysWell()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>duplicate</mutatedMethod><methodDescription>()Lcom/l3rnz/algebrain/domain/SumPart;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatAddSumToSumMakesOneSum()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/SumPart::duplicate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>getContainedExpression</mutatedMethod><methodDescription>()Lcom/l3rnz/algebrain/domain/Term;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatWeCanIdentifyElementInSum()]</killingTest><description>replaced return value with null for com/l3rnz/algebrain/domain/SumPart::getContainedExpression</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SumPart.java</sourceFile><mutatedClass>com.l3rnz.algebrain.domain.SumPart</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>com.l3rnz.algebrain.domain.SumTest.[engine:junit-jupiter]/[class:com.l3rnz.algebrain.domain.SumTest]/[method:testThatWeCanIdentifyElementInSum()]</killingTest><description>replaced return value with &#34;&#34; for com/l3rnz/algebrain/domain/SumPart::toString</description></mutation>
</mutations>
